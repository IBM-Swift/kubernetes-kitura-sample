apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: "{{  .Chart.Name }}-deployment"
  labels:
    app: {{ template "name" . }}
    chart: '{{ .Chart.Name }}'
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      release: "{{ .Release.Name }}"
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      # Here's where a user could define their own annotation too
      annotations:
        productName: Swift Sample Application
        productID: Swift_Sample_Application_1.0.0_perpetual_00000
        productVersion: 1.0.0
      labels:
        app: "{{  .Chart.Name }}-selector"
        chart: '{{ .Chart.Name }}'
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      affinity:
        {{- include "nodeaffinity" . | indent 6 }}
      containers:
      - name: "{{  .Chart.Name  }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.servicePort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds}}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.servicePort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds}}
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        env:
          - name: PORT
            value : "{{ .Values.service.servicePort }}"
